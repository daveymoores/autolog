name: CI Checks

on:
  push:
    branches:
      - main
  pull_request:

env:
  AUTOLOG_URI: ${{ secrets.AUTOLOG_URI }}
  MONGODB_DB: ${{ secrets.MONGODB_DB }}
  EXPIRE_TIME_SECONDS: ${{ secrets.EXPIRE_TIME_SECONDS }}
  MONGODB_COLLECTION: ${{ secrets.MONGODB_COLLECTION }}
  API_ROUTE_BEARER_KEY: ${{ secrets.API_ROUTE_BEARER_KEY }}
  API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
  TEST_MODE: ${{ secrets.TEST_MODE }}

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: false

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          #args: -- -D warnings
