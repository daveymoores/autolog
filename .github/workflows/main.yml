on:
  push:
    branches:
      - main

name: Production checks

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          AUTOLOG_URI: ${{ secrets.AUTOLOG_URI }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
          EXPIRE_TIME_SECONDS: ${{ secrets.EXPIRE_TIME_SECONDS }}
          MONGODB_COLLECTION: ${{ secrets.MONGODB_COLLECTION }}
          TEST_MODE: ${{ secrets.TEST_MODE }}
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          AUTOLOG_URI: ${{ secrets.AUTOLOG_URI }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
          EXPIRE_TIME_SECONDS: ${{ secrets.EXPIRE_TIME_SECONDS }}
          MONGODB_COLLECTION: ${{ secrets.MONGODB_COLLECTION }}
          TEST_MODE: ${{ secrets.TEST_MODE }}
        with:
          command: test

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: "0.15.0"
          args: "-- --test-threads 1"

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          AUTOLOG_URI: ${{ secrets.AUTOLOG_URI }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
          EXPIRE_TIME_SECONDS: ${{ secrets.EXPIRE_TIME_SECONDS }}
          MONGODB_COLLECTION: ${{ secrets.MONGODB_COLLECTION }}
          TEST_MODE: ${{ secrets.TEST_MODE }}
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          #args: -- -D warnings
