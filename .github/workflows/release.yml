name: Release

on:
  push:
    tags:
      - "v*"

env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  AUTOLOG_URI: ${{ secrets.AUTOLOG_URI }}
  MONGODB_DB: ${{ secrets.MONGODB_DB }}
  EXPIRE_TIME_SECONDS: ${{ secrets.EXPIRE_TIME_SECONDS }}
  MONGODB_COLLECTION: ${{ secrets.MONGODB_COLLECTION }}
  TEST_MODE: false

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_name: autolog-mac.tar.gz
          - os: ubuntu-latest
            artifact_name: autolog-linux.tar.gz

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build the release
        run: cargo build --release

      - name: Set executable permission
        run: chmod +x target/release/autolog

      - name: Create tarball
        run: |
          cd target/release
          tar -czpf ${{ matrix.artifact_name }} autolog

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: target/release/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest

    # Add permissions for the GITHUB_TOKEN
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all workflow artifacts
        uses: actions/download-artifact@v3

      - name: Generate SHA256 for macOS
        id: sha256_mac
        run: echo "sha256_mac=$(shasum -a 256 autolog-mac.tar.gz/autolog-mac.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Generate SHA256 for Linux
        id: sha256_linux
        run: echo "sha256_linux=$(shasum -a 256 autolog-linux.tar.gz/autolog-linux.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Move tarballs to root
        run: |
          mv autolog-mac.tar.gz/autolog-mac.tar.gz .
          mv autolog-linux.tar.gz/autolog-linux.tar.gz .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            autolog-mac.tar.gz
            autolog-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up GitHub CLI
        run: sudo apt-get install gh

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Check if token is available
        run: |
          if [ -z "${{ secrets.AUTOLOG_ACTION_PAT }}" ]; then
            echo "Error: AUTOLOG_ACTION_PAT secret is not available"
            exit 1
          else
            echo "Secret is available"
          fi

      - name: Update Homebrew Formula
        run: |
          # Export token to an environment variable instead of using in URL
          export TOKEN="${{ secrets.AUTOLOG_ACTION_PAT }}"

          # Clone using token
          echo "Cloning repository..."
          git clone "https://${TOKEN}@github.com/daveymoores/homebrew-autolog.git"

          cd homebrew-autolog
          git checkout -b "update-formula-${GITHUB_REF#refs/tags/}" || exit 1

          echo "Updating formula..."
          # Create the updated formula file with platform-specific binaries
          cat > Formula/autolog.rb << EOF
          class Autolog < Formula
            desc "CLI tool for automated logging"
            homepage "https://github.com/daveymoores/autolog"
            version "${GITHUB_REF#refs/tags/v}"
            license "MIT"

            on_macos do
              url "https://github.com/daveymoores/autolog/releases/download/${GITHUB_REF#refs/tags/}/autolog-mac.tar.gz"
              sha256 "${{ steps.sha256_mac.outputs.sha256_mac }}"
            end

            on_linux do
              url "https://github.com/daveymoores/autolog/releases/download/${GITHUB_REF#refs/tags/}/autolog-linux.tar.gz"
              sha256 "${{ steps.sha256_linux.outputs.sha256_linux }}"
            end

            def install
              bin.install "autolog"
              (var/"autolog").mkpath
            end

            def post_uninstall
              if OS.mac?
                db_dir = "\#{ENV["HOME"]}/Library/Application Support/dev.autolog.cli"
                if Dir.exist?(db_dir)
                  puts "Removing database directory at \#{db_dir}"
                  system "rm", "-rf", db_dir
                end
              else
                db_dir = "\#{ENV["HOME"]}/.local/share/dev.autolog.cli"
                if Dir.exist?(db_dir)
                  puts "Removing database directory at \#{db_dir}"
                  system "rm", "-rf", db_dir
                end
              end
            end

            test do
              assert_match "autolog version", shell_output("\#{bin}/autolog --version")
            end
          end
          EOF

          git add Formula/autolog.rb
          git commit -m "chore: Update autolog formula to ${GITHUB_REF#refs/tags/}" || exit 1

          echo "Pushing changes..."
          # Push using token variable instead of hardcoding in URL
          git push "https://${TOKEN}@github.com/daveymoores/homebrew-autolog.git" "update-formula-${GITHUB_REF#refs/tags/}" || exit 1

      - name: Create Pull Request
        run: |
          cd homebrew-autolog

          # Set GH_TOKEN environment variable for GitHub CLI
          export GH_TOKEN="${{ secrets.AUTOLOG_ACTION_PAT }}"

          # Create PR with explicit head branch
          echo "Creating pull request..."
          gh pr create --head "update-formula-${GITHUB_REF#refs/tags/}" --base main --title "Update autolog formula to ${GITHUB_REF#refs/tags/}" --body "This PR updates the autolog formula to support both macOS and Linux platforms for version ${GITHUB_REF#refs/tags/}" || exit 1
